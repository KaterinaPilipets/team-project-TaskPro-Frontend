{"version":3,"file":"static/js/42.5750dac5.chunk.js","mappings":"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","sources":["components/Button/Button.styled.js","components/Button/Button.jsx","components/Bord/Task/Task.styled.js","components/Bord/Task/Task.js","components/Bord/ColumnTask/ColumnTask.Styled.js","components/Bord/ColumnTask/ColumnTask.js","components/ButtonPrimary/ButtonPrimary.styled.js","components/ButtonPrimary/ButtonPrimary.jsx","components/ThemeSelect/ThemeSelect.styled.js","components/ThemeSelect/ThemeSelect.jsx","pages/HomePage.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const StyledButton = styled.button`\nwidth: 100%;\nfont-family: inherit;\nfont-size: 14px;\ntext-align: center;\ntext-decoration: none;\ncolor: inherit;\nbackground-color: transparent;\nborder: none;\nborder-radius: 8px;\nborder-radius: 8px;\ncursor: pointer;\n`;\n","// import PropTypes from \"prop-types\";\n\nimport { StyledButton } from \"./Button.styled\";\n\nexport const Button = ({\n  type = \"submit\",\n  onClick,\n  children,\n  ...allyProps\n}) => {\n  return (\n    <StyledButton type={type} onClick={onClick} {...allyProps}>\n      {children}\n    </StyledButton>\n  );\n};\n\n// Button.propTypes = {\n//   onClick: PropTypes.func,\n//   children: PropTypes.node,\n//   \"aria-label\": PropTypes.string.isRequired,\n// };\n","import styled from '@emotion/styled';\n\nexport const ListItem = styled.li`\n  border-left: 4px solid teal;\n  border-radius: 8px;\n  width: 100%;\n  height: 154px;\n  padding: 14px 24px;\n  background-color: var(--bgColor);\n  color: var(--textColor);\n`;\nexport const Title = styled.p`\n  font-size: var(--fontSize14);\n  font-weight: var(--fontWeight500);\n  margin-bottom: 8px;\n  color: var(--titleColor);\n`;\nexport const SubTitle = styled.p`\n  color: var(--subTitleColor);\n  font-size: var(--fontSize8);\n`;\nexport const SubText = styled.p`\n  color: var(--subTextColor);\n  font-size: var(--fontSize10);\n`;\nexport const TextHidden = styled.p`\n  font-size: var(--fontSize12);\n  height: 38px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\nexport const Span = styled.span`\n  display: block;\n  height: 1px;\n  width: 100%;\n  background-color: var(--lineColor);\n  margin: 14px 0;\n`;\nexport const Wrap = styled.div`\n  display: flex;\n  justify-contact: center;\n  aling-items: center;\n  gap: 14px;\n`;\n","import {\n  ListItem,\n  Span,\n  TextHidden,\n  Title,\n  SubTitle,\n  SubText,\n  Wrap,\n} from './Task.styled';\nexport const Task = ({ task }) => {\n  const { name, discription, priority, deadline } = task;\n\n  return (\n    <ListItem>\n      <Title>{name}</Title>\n      <TextHidden>{discription}</TextHidden>\n      <Span />\n      <Wrap>\n        <div>\n          <SubTitle>Priority</SubTitle>\n          <SubText>{priority}</SubText>\n        </div>\n        <div>\n          <SubTitle>Deadline</SubTitle>\n          <SubText>{deadline}</SubText>\n        </div>\n      </Wrap>\n    </ListItem>\n  );\n};\n","import styled from '@emotion/styled';\nexport const List = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n  padding: 0;\n  gap: 8px;\n`;\nexport const HeaderColumn = styled.div`\n  border-radius: 8px;\n  width: 100%;\n  hight: 56px;\n  padding: 14px 24px;\n  background-color: var(--bgColor);\n  color: var(--titleColor);\n  font-weight: var(--fontWeight500);\n  // margin-bottom: 14px;\n`;\n// export const Wrap = styled.div`\n//   dysplay: block;\n//   margin-bottom: 36px;\n// `;\nexport const Column = styled.div`\n  width: 334px;\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n`;\n","import { Button } from 'components/Button';\nimport { Task } from '../Task/Task';\nimport { Column, HeaderColumn, List } from './ColumnTask.Styled';\nexport const ColumnTask = ({ tasksArray, titleColumn }) => {\n  //   console.log(tasksArray);\n  return (\n    <Column>\n      <HeaderColumn>\n        <p>{titleColumn}</p>\n      </HeaderColumn>\n\n      <List>\n        {tasksArray.map(task => {\n          console.log(task);\n          return <Task key={task.id} task={task} />;\n        })}\n      </List>\n      {/* <Wrap> */}\n      <Button>Add another card</Button>\n      {/* </Wrap> */}\n    </Column>\n  );\n};\n\n// function ContactList() {\n//   const filteredContacts = useSelector(selectFilteredContacts);\n//   return (\n//     <List>\n//       {filteredContacts.map(({ id, name, number }) => (\n//         <Contact key={id} id={id} name={name} number={number} />\n//       ))}\n//     </List>\n//   );\n// }\n","import styled from '@emotion/styled';\n\nexport const StyledButton = styled.button`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding: 14px 0px;\nwidth: 100%;\nfont-size: var(--fontSize14);\nfont-family: var(--fontFamily);\nfont-weight: var(--fontWeight500);\ncolor: var(--buttonAddCardColor);\nbackground-color: var(--buttonAddCardBgColor);\nborder-radius: var(--borderRadius8);\n`;\n\nexport const StyledIcon = styled.span`\ndisplay: flex;\n  align-items: center;\n  justify-content: center;\n  width: 28px;\n  height: 28px;\n  margin-right: 8px;\n  background-color: var(--buttonAddCardIconBgColor);\n  border-radius: var(--borderRadius8);\n  `;\n\nexport const Svg = styled.svg`\nfill: var(--buttonAddCardIconFill);\n`\n","import icon from '../../sourse/sprite.svg';\n\nimport { StyledButton, StyledIcon, Svg } from './ButtonPrimary.styled';\n\nexport const ButtonPrimary = ({\n  type = 'submit',\n  onClick,\n  children,\n  ...allyProps\n}) => {\n  return (\n    <StyledButton type={type} onClick={onClick} {...allyProps}>\n      <StyledIcon>\n        <Svg width=\"14\" height=\"14\">\n          <use xlinkHref={`${icon}#icon-plus`} />\n        </Svg>\n      </StyledIcon>\n      {children}\n    </StyledButton>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const StyledSelectWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  cursor: pointer;\n`;\nexport const StyledTitle = styled.p`\n  font-size: var(--fontSize14);\n  font-family: var(--fontFamily);\n  font-weight: var(--fontWeight500);\n  letter-spacing: -0.28px;\n  color: var(--themeText);\n`;\n\nexport const StyledList = styled.ul`\n  display: inline-flex;\n  padding: 18px 44px 18px 18px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  border-radius: var(--borderRadius8);\n  border: 1px solid var(--themeBorderColor);\n  background-color: var(--themeBgColor);\n  gap: 4px;\n`;\n\nexport const StyledItem = styled.li`\n  cursor: pointer;\n  color: var(--themeSelectText);\n  transition: color var(--transition);\n  :hover {\n    color: var(--themeSelectTextAccent);\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { MdOutlineKeyboardArrowDown } from 'react-icons/md';\nimport { setTheme } from '../../redux/theme/theme-slice';\nimport {\n  StyledSelectWrapper,\n  StyledList,\n  StyledItem,\n  StyledTitle,\n} from './ThemeSelect.styled';\n\nconst themes = [\n  { name: 'Light', value: 'light' },\n  { name: 'Dark', value: 'dark' },\n  { name: 'Violet', value: 'violet' },\n];\n\nconst ThemeSelect = () => {\n  const dispatch = useDispatch();\n  const [selectedTheme, setSelectedTheme] = useState('dark');\n  const [isThemeOpen, setIsThemeOpen] = useState(false);\n\n  useEffect(() => {\n    document.body.setAttribute('data-theme', selectedTheme);\n  }, [selectedTheme]);\n\n  const toggleTheme = theme => {\n    dispatch(setTheme(theme));\n    setSelectedTheme(theme);\n    setIsThemeOpen(false);\n  };\n\n  return (\n    <div>\n      <StyledSelectWrapper onClick={() => setIsThemeOpen(!isThemeOpen)}>\n        <StyledTitle>Theme</StyledTitle>\n        <MdOutlineKeyboardArrowDown size={16} color=\"var(--themeText)\" />\n      </StyledSelectWrapper>\n      <StyledList isOpen={isThemeOpen}>\n        {themes.map(({ value, name }) => (\n          <StyledItem key={value} onClick={() => toggleTheme(value)}>\n            {name}\n          </StyledItem>\n        ))}\n      </StyledList>\n    </div>\n  );\n};\n\nexport default ThemeSelect;\n","// import { SharedLayout } from 'components/SharedLayout/SharedLayout.js';\n\nimport { ColumnTask } from 'components/Bord/ColumnTask/ColumnTask';\n\nimport { ButtonPrimary } from 'components/ButtonPrimary/ButtonPrimary';\nimport ThemeSelect from 'components/ThemeSelect/ThemeSelect';\n\n// import { Task } from 'components/Bord/Task/Task';\nconst tasksArray = [\n  {\n    id: '1',\n    // titleColumn: '1col',or id\n    name: 'The Watch Spot Design1',\n    discription: `Create a visually stunning and eye-catching watch dial design that embodies our brand's essence of sleek aesthetics and modern elegance. Your design should be unique, innovative, and reflective of the latest trends in watch design.`,\n    priority: 'Low',\n    deadline: '12 / 05 / 2023',\n  },\n  {\n    id: '2',\n    // titleColumn: '2col',or id\n    name: 'The Watch Spot Design2',\n    discription: `Create a visually stunning and eye-catching watch dial design that embodies our brand's essence of sleek aesthetics and modern elegance. Your design should be unique, innovative, and reflective of the latest trends in watch design.`,\n    priority: 'High',\n    deadline: '12 / 05 / 2023',\n  },\n];\n\nconst HomePage = () => {\n  document.body.setAttribute('data-theme', 'dark');\n  return (\n    <div>\n      <p>board </p>\n      <ColumnTask tasksArray={tasksArray} titleColumn=\"titleColumn\" />\n      <ThemeSelect />\n      <ButtonPrimary>Add another card</ButtonPrimary>\n\n    </div>\n  );\n};\nexport default HomePage;\n"],"names":["StyledButton","styled","Button","type","onClick","children","allyProps","ListItem","Title","SubTitle","SubText","TextHidden","Span","Wrap","Task","task","name","discription","priority","deadline","List","HeaderColumn","Column","ColumnTask","tasksArray","titleColumn","map","console","log","id","StyledIcon","Svg","ButtonPrimary","width","height","xlinkHref","icon","StyledSelectWrapper","StyledTitle","StyledList","StyledItem","themes","value","dispatch","useDispatch","useState","selectedTheme","setSelectedTheme","isThemeOpen","setIsThemeOpen","useEffect","document","body","setAttribute","size","color","isOpen","theme","setTheme"],"sourceRoot":""}