{"version":3,"file":"static/js/569.8a34986d.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.jsx","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/AuthPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport sprite from '../../sourse/sprite.svg';\nimport { faEyeSlash } from '@fortawesome/free-solid-svg-icons';\nimport { register } from 'redux/auth/authOperations';\nimport { Formik, Field } from 'formik';\nimport { useDispatch } from 'react-redux'; // useSelector\nimport * as Yup from 'yup';\nimport {\n  ErrorText,\n  PasswordToggle,\n  Menu,\n  Inputs,\n  Container,\n  PasswordInput,\n  PasswordIcon,\n  Content,\n  Svg,\n  RegisterBtn,\n  StyledRegistrationLink,\n  StyledLink,\n} from './RegisterForm.styled';\n// import { getError } from 'redux/auth/authSelectors';\nimport { toast } from 'react-toastify';\n\nconst RegisterSchema = Yup.object().shape({\n  name: Yup.string().required('Name is required'),\n  email: Yup.string()\n    .min(6, 'Email must be at least 6 characters')\n    .email('Invalid email')\n    .required('Email is required'),\n  password: Yup.string()\n    .min(6, 'Password must be at least 6 characters')\n    .required('Password is required'),\n});\n\nfunction RegistrationPage() {\n  const navigate = useNavigate();\n  // const errorMessage = useSelector(getError);\n  const dispatch = useDispatch();\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const newUser = {\n      name: event.target.elements.name.value,\n      email: event.target.elements.email.value,\n      password: event.target.elements.password.value,\n    };\n\n    const response = await dispatch(register(newUser));\n\n    if (response.error) {\n      toast(response.payload);\n    } else {\n      navigate('/home');\n    }\n  };\n\n  return (\n    <Container>\n      <form onSubmit={handleSubmit}>\n        <Formik\n          initialValues={{ name: '', email: '', password: '' }}\n          validationSchema={RegisterSchema}\n        >\n          <Content>\n            <Menu>\n              <StyledRegistrationLink href=\"register\" underline=\"none\">\n                Registration\n              </StyledRegistrationLink>\n              <StyledLink href=\"login\" underline=\"none\">\n                Log In\n              </StyledLink>\n            </Menu>\n            <Inputs>\n              <Field autoFocus name=\"name\" type=\"text\" placeholder=\"Name\" />\n              <ErrorText name=\"name\" component=\"div\" />\n              <Field name=\"email\" type=\"email\" placeholder=\"Email\" />\n              <ErrorText name=\"email\" component=\"div\" />\n              <PasswordInput>\n                <Field\n                  name=\"password\"\n                  type={showPassword ? 'text' : 'password'}\n                  placeholder=\"Password\"\n                />\n                <ErrorText name=\"password\" component=\"div\" />\n                <PasswordToggle\n                  className={`${PasswordToggle} ${PasswordIcon}`}\n                  onClick={togglePasswordVisibility}\n                >\n                  {showPassword ? (\n                    <PasswordIcon icon={faEyeSlash} width=\"18px\" />\n                  ) : (\n                    <Svg>\n                      <use stroke=\"gray\" xlinkHref={`${sprite}#icon-eye`} />\n                    </Svg>\n                  )}\n                </PasswordToggle>\n              </PasswordInput>\n            </Inputs>\n            <RegisterBtn type=\"submit\">Register Now</RegisterBtn>\n          </Content>\n        </Formik>\n      </form>\n    </Container>\n  );\n}\n\nexport default RegistrationPage;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from '@mui/material';\nimport styled from '@emotion/styled';\nimport { ErrorMessage } from 'formik';\n\nexport const Container = styled.div `\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100vh;\n    width: 100%;\n    background: var(--welcomeBgColor);\n    background-repeat: no-repeat;\n    background-size: cover;\n`\nexport const Content = styled.div `\n  text-align: center;\n  background: var(--bgColorAuth);\n  border-radius: 8px;\n  padding: 40px;\n  @media screen and (max-width: 768px) {\n    padding: 24px;\n  }\n`\nexport const Menu = styled.div`\n  display: flex;\n`;\n\nexport const StyledLink = styled(Link)`\n  left: 160px;\n  top: 40px;\n  font-style: normal;\n  font-weight: var(--fontWeight500);\n  font-size: var(--fontSize18);\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: var(--lightColor);\n`;\n\nexport const StyledRegistrationLink = styled(Link)`\n  margin-right: 14px;\n  font-style: normal;\n  font-weight: var(--fontWeight500);\n  font-size: var(--fontSize18);\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: var(--inputTextColor);\n`;\n\nexport const Inputs = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 40px;\n  gap: 14px;\n\n  input {\n    width: 326px;\n    height: 49px;\n    left: 40px;\n    top: 107px;\n    color: var(--lightColor);\n    background: var(--inputBgColor);\n    opacity: 0.4;\n    border: 1px solid var(--buttonBgColor);\n    padding-left: 18px;\n    box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n    border-radius: 8px;\n    @media screen and (max-width: 768px) {\n        width: 287px;\n\n    }\n  }\n`;\nexport const PasswordInput = styled.div `\n    position: relative;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    gap: 14px;\n`\nexport const PasswordInputField = styled.input`\n  width: 326px;\n  height: 49px;\n  left: 40px;\n  top: 107px;\n  color: var(--lightColor);\n  background: var(--inputBgColor);\n  opacity: 0.4;\n  border: 1px solid var(--inputBorderFocus);\n  padding-left: 18px;\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n  border-radius: 8px;\n`;\n\nexport const PasswordToggle = styled.span`\n    position: absolute;\n    right: 18px;\n    top: 19px;\n    cursor: pointer;\n    color: var(--passwordColor);\n`;\n\nexport const PasswordIcon = styled(FontAwesomeIcon)`\n    color: var(--passwordColor);\n`;\nexport const Svg = styled.svg`\n  width: 16.5px;\n  height: 16px;\n  top: 50%;\n  right: 4px;\n`;\nexport const LoginBtn = styled.button`\n    font-style: normal;\n    font-weight: var(--fontWeight500);\n    font-size: 14px;\n    line-height: 21px;\n    text-align: center;\n    margin-top: 24px;\n    letter-spacing: -0.02em;\n    width: 100%;\n    height: 49px;\n    background: var(--buttonBgColor);\n    border-radius: 8px;\n    color: var(--buttonColor);\n    cursor: pointer;\n    @media screen and (max-width: 768px) {\n        width: 287px;\n    }\n`;\n\nexport const ErrorText = styled(ErrorMessage)`\n  font-size: 15px;\n  color: white;\n`;","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { faEyeSlash } from '@fortawesome/free-solid-svg-icons';\nimport sprite from '../../sourse/sprite.svg';\nimport { login } from 'redux/auth/authOperations';\nimport { useDispatch } from 'react-redux';\nimport {\n  ErrorText,\n  PasswordToggle,\n  Menu,\n  Inputs,\n  Container,\n  PasswordInput,\n  PasswordIcon,\n  Content,\n  Svg,\n  LoginBtn,\n  StyledRegistrationLink,\n  StyledLink,\n} from './LoginForm.styled';\nimport { setToken } from 'redux/auth/authSelectors';\nimport { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { toast } from 'react-toastify';\n\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string()\n    .min(6, 'Password must be at least 6 characters')\n    .email('Invalid email')\n    .required('Email is required'),\n  password: Yup.string()\n    .min(6, 'Password must be at least 6 characters')\n    .required('Password is required'),\n});\n\nfunction LoginPage() {\n  const navigate = useNavigate();\n  const [showPassword, setShowPassword] = useState(false);\n  const dispatch = useDispatch();\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const currentUser = {\n      email: event.target.elements.email.value,\n      password: event.target.elements.password.value,\n    };\n\n    const response = await dispatch(login(currentUser, setToken));\n\n    if (response.error) {\n      toast.error(response.payload);\n    } else {\n      navigate('/home');\n    }\n  };\n\n  return (\n    <Container>\n      <form onSubmit={handleSubmit}>\n        <Formik\n          initialValues={{ email: '', password: '' }}\n          validationSchema={LoginSchema}\n        >\n          <Content>\n            <Menu>\n              <StyledRegistrationLink href=\"register\" underline=\"none\">\n                Registration\n              </StyledRegistrationLink>\n              <StyledLink href=\"login\" underline=\"none\">\n                Log In\n              </StyledLink>\n            </Menu>\n            <Inputs>\n              <Field name=\"email\" type=\"email\" placeholder=\"Email\" />\n              <ErrorText name=\"email\" component=\"div\" />\n              <PasswordInput>\n                <Field\n                  name=\"password\"\n                  type={showPassword ? 'text' : 'password'}\n                  placeholder=\"Password\"\n                />\n                <ErrorText name=\"password\" component=\"div\" />\n\n                <PasswordToggle\n                  className={`${PasswordToggle} ${PasswordIcon}`}\n                  onClick={togglePasswordVisibility}\n                >\n                  {showPassword ? (\n                    <PasswordIcon icon={faEyeSlash} width=\"18px\" />\n                  ) : (\n                    <Svg>\n                      <use\n                        stroke=\"gray\"\n                        xlinkHref={`${sprite}#icon-eye`}\n                        style={{ color: '#737373' }}\n                      />\n                    </Svg>\n                  )}\n                </PasswordToggle>\n              </PasswordInput>\n            </Inputs>\n            <LoginBtn>Log In Now</LoginBtn>\n          </Content>\n        </Formik>\n      </form>\n    </Container>\n  );\n}\n\nexport default LoginPage;\n","import { useParams } from 'react-router-dom';\nimport RegisterForm from '../components/RegisterForm/RegisterForm'\nimport LoginForm from '../components/LoginForm/LoginForm'\nimport { ToastContainer } from 'react-toastify';\n\nconst AuthPage = () => {\n  const { id } = useParams();\n  return (\n    <div>\n      {id === 'login' && <LoginForm />}\n      {id === 'register' && <RegisterForm /> }\n      <ToastContainer />\n    </div>\n  );\n};\nexport default AuthPage;"],"names":["RegisterSchema","Yup","shape","name","required","email","min","password","navigate","useNavigate","dispatch","useDispatch","useState","showPassword","setShowPassword","handleSubmit","event","preventDefault","newUser","target","elements","value","register","response","error","toast","payload","onSubmit","initialValues","validationSchema","href","underline","autoFocus","type","placeholder","component","className","PasswordToggle","PasswordIcon","onClick","icon","faEyeSlash","width","stroke","xlinkHref","sprite","Container","styled","Content","Menu","StyledLink","Link","StyledRegistrationLink","Inputs","PasswordInput","FontAwesomeIcon","Svg","LoginBtn","ErrorText","ErrorMessage","LoginSchema","currentUser","login","setToken","style","color","id","useParams","LoginForm","RegisterForm"],"sourceRoot":""}