{"version":3,"file":"static/js/800.dfa3f4a4.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/WelcomePage/WelcomePage.module.css?b4ef","../node_modules/@mui/system/esm/styled.js","components/WelcomePage/WelcomePage.jsx","pages/WelcomePage.js","../node_modules/@mui/material/Link/linkClasses.js","../node_modules/@mui/material/Link/getTextDecoration.js","../node_modules/@mui/material/Link/Link.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"WelcomePage_content__hHCaY\",\"logo\":\"WelcomePage_logo__-4HK5\",\"svg\":\"WelcomePage_svg__yimwJ\",\"size\":\"WelcomePage_size__0Gvms\",\"logocontainer\":\"WelcomePage_logocontainer__17YEF\",\"photo\":\"WelcomePage_photo__95xtU\",\"name\":\"WelcomePage_name__TsFIb\",\"text\":\"WelcomePage_text__UjlHO\",\"registration\":\"WelcomePage_registration__a6ItU\",\"registerBtn\":\"WelcomePage_registerBtn__6wlUH\",\"MuiButtonBase-root\":\"WelcomePage_MuiButtonBase-root__DlR4z\",\"loginBtn\":\"WelcomePage_loginBtn__irf4s\"};","import createStyled from './createStyled';\nconst styled = createStyled();\nexport default styled;","import React from 'react';\nimport css from './WelcomePage.module.css';\nimport { Button, Link } from '@mui/material';\nimport { styled } from '@mui/system';\nimport sprite from '../../sourse/sprite.svg';\n\nconst CustomButton = styled(Button)(({ theme }) => ({\n  fontStyle: 'normal',\n  fontWeight: 500,\n  fontSize: 14,\n  lineHeight: '21px',\n  textAlign: 'center',\n  letterSpacing: '-0.02em',\n  padding: '14px 131px 14px 130px',\n  background: '#161616',\n  borderRadius: 8,\n  color: 'white',\n  cursor: 'pointer',\n  textTransform: 'none',\n  '&:hover': {\n    background: '#161616', // Змініть на потрібний колір при наведенні\n  },\n  [theme.breakpoints.down('sm')]: {\n    padding: '14px 126px 14px 126px',\n  },\n}));\n\nfunction WelcomePage() {\n  return (\n    <div className={css.content}>\n      <div className={css.logo}>\n        {/* <img className={css.size} src={logo} /> */}\n        <div className={css.logocontainer}>\n          <svg className={css.svg}><use xlinkHref={`${sprite}#icon-welcome`} /></svg>\n          {/* <img className={css.photo} src={icon} /> */}\n          <p className={css.name}>TASK PRO</p>\n        </div>\n        <p className={css.text}>\n          Supercharge your productivity and take control of your tasks with Task\n          Pro - Don't wait, start achieving your goals now!\n        </p>\n      </div>\n      <div className={css.registration}>\n        <div>\n          {/* <NavLink className={css.registerBtn} href=\"/auth/register\">Registration</NavLink > */}\n          {/* <Button href='/auth/registration' variant=\"contained\" className={classes.customButton}>Registration</Button>*/}\n          <CustomButton href='auth/register' variant=\"contained\">Registration</CustomButton>\n        </div>\n        <div>\n          {/* <NavLink className={css.loginBtn} to=\"/auth/login\">Log In</NavLink > */}\n          {/* <Button href='/auth/login' variant=\"text\" style={{ color: \"black\", textTransform: 'none' }}>Log In</Button> */}\n          <Link className={css.style} href=\"auth/login\" underline=\"none\" color={{ color: '#161616' }}>Log In</Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default WelcomePage;\n","// const WelcomePage = () => {\n//   return (\n//     <div>\n//       <p>WelcomePage</p>\n//     </div>\n//   );\n// };\n// export default WelcomePage;\n\nimport WelcomePage from '../components/WelcomePage/WelcomePage';\n\nexport default WelcomePage;\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import { alpha, getPath } from '@mui/system';\nexport const colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = transformDeprecatedColors(ownerState.color);\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n  return alpha(color, 0.4);\n};\nexport default getTextDecoration;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport getTextDecoration, { colorTransformations } from './getTextDecoration';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && _extends({\n    textDecoration: 'underline'\n  }, ownerState.color !== 'inherit' && {\n    textDecorationColor: getTextDecoration({\n      theme,\n      ownerState\n    })\n  }, {\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }), ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n    },\n\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n  const {\n      className,\n      color = 'primary',\n      component = 'a',\n      onBlur,\n      onFocus,\n      TypographyClasses,\n      underline = 'always',\n      variant = 'inherit',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n  const handleBlur = event => {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n  const handleFocus = event => {\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant,\n    sx: [...(!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])]\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.any,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;"],"names":["createStyled","CustomButton","styled","Button","theme","fontStyle","fontWeight","fontSize","lineHeight","textAlign","letterSpacing","padding","background","borderRadius","color","cursor","textTransform","breakpoints","down","className","css","xlinkHref","sprite","href","variant","Link","underline","getLinkUtilityClass","slot","generateUtilityClass","generateUtilityClasses","colorTransformations","primary","textPrimary","secondary","textSecondary","error","ownerState","transformedColor","transformDeprecatedColors","getPath","channelColor","alpha","_excluded","LinkRoot","Typography","name","overridesResolver","props","styles","root","capitalize","component","button","_extends","textDecoration","textDecorationColor","getTextDecoration","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","React","inProps","ref","useThemeProps","onBlur","onFocus","TypographyClasses","sx","other","_objectWithoutPropertiesLoose","useIsFocusVisible","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","focusVisible","setFocusVisible","handlerRef","useForkRef","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","event","current","Object","keys","includes","Array","isArray"],"sourceRoot":""}