{"version":3,"file":"static/js/804.a92e8312.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/AuthPage.js"],"sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from '@mui/material';\nimport styled from '@emotion/styled';\nimport { ErrorMessage } from 'formik';\n\nexport const Container = styled.div `\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100vh;\n    width: 100%;\n    background: var(--welcomeBgColor);\n    background-repeat: no-repeat;\n    background-size: cover;\n`\nexport const Content = styled.div `\n  text-align: center;\n  background: var(--bgColorAuth);\n  border-radius: 8px;\n  padding: 40px;\n  @media screen and (max-width: 768px) {\n    padding: 24px;\n  }\n`\nexport const Menu = styled.div`\n  display: flex;\n`;\n\nexport const StyledLink = styled(Link)`\n  left: 160px;\n  top: 40px;\n  font-style: normal;\n  font-weight: var(--fontWeight500);\n  font-size: var(--fontSize18);\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: var(--inputTextColor);\n`;\n\nexport const StyledRegistrationLink = styled(Link)`\n  margin-right: 14px;\n  font-style: normal;\n  font-weight: var(--fontWeight500);\n  font-size: var(--fontSize18);\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: var(--lightColor);\n`;\n\nexport const Inputs = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 40px;\n  gap: 14px;\n\n  input {\n    width: 326px;\n    height: 49px;\n    left: 40px;\n    top: 107px;\n    color: var(--lightColor);\n    background: var(--inputBgColor);\n    opacity: 0.4;\n    border: 1px solid var(--inputBorderFocus);\n    padding-left: 18px;\n    box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n    border-radius: var(--borderRadius8);\n    @media screen and (max-width: 768px) {\n        width: 287px;\n    }\n  }\n`;\nexport const PasswordInput = styled.div `\n    position: relative;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    gap: 14px;\n`\nexport const PasswordInputField = styled.input`\n  width: 326px;\n  height: 49px;\n  left: 40px;\n  top: 107px;\n  color: var(--lightColor);\n  background: var(--inputBgColor);\n  opacity: 0.4;\n  border: 1px solid var(--inputBorderFocus);\n  padding-left: 18px;\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n  border-radius: 8px;\n`;\n\nexport const PasswordToggle = styled.span`\n    position: absolute;\n    right: 18px;\n    top: 19px;\n    cursor: pointer;\n    color: var(--passwordColor);\n`;\n\nexport const PasswordIcon = styled(FontAwesomeIcon)`\n    color: var(--passwordColor);\n`;\nexport const Svg = styled.svg`\n    width: 16.5px;\n    height: 16px;\n    top: 50%;\n    right: 4px;\n`;\nexport const RegisterBtn = styled.button`\n    font-style: normal;\n    font-weight: var(--fontWeight500);\n    font-size: var(--fontSize14);\n    line-height: 21px;\n    text-align: center;\n    letter-spacing: -0.02em;\n    width: 100%;\n    height: 49px;\n    margin-top: 24px;\n    background: var(--inputBorderFocus);\n    border-radius: 8px;\n    color: var(--buttonColor);\n    cursor: pointer;\n    @media screen and (max-width: 768px) {\n        width: 287px;\n    }\n`;\n\nexport const ErrorText = styled(ErrorMessage)`\n  font-size: 15px;\n  color: white;\n`;","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport sprite from '../../sourse/sprite.svg';\nimport { faEyeSlash } from '@fortawesome/free-solid-svg-icons';\nimport { register } from 'redux/auth/authOperations';\nimport { Formik, Field } from 'formik';\nimport { useDispatch } from 'react-redux'; // useSelector\nimport * as Yup from 'yup';\nimport { ErrorText, PasswordToggle, Menu, Inputs, Container, PasswordInput, PasswordIcon, Content, Svg, RegisterBtn, StyledRegistrationLink, StyledLink } from \"./RegisterForm.styled\";\n// import { getError } from 'redux/auth/authSelectors';\nimport { toast } from 'react-toastify';\n\nconst RegisterSchema = Yup.object().shape({\n  name: Yup.string().required('Name is required'),\n  email: Yup.string().min(6, 'Email must be at least 6 characters').email('Invalid email').required('Email is required'),\n  password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required'),\n});\n\nfunction RegistrationPage() {\n  const navigate = useNavigate();\n  // const errorMessage = useSelector(getError);\n  const dispatch = useDispatch();\n\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n\n  const handleSubmit = async (event) => {\n\n    event.preventDefault();\n    const newUser = {\n      name: event.target.elements.name.value,\n      email: event.target.elements.email.value,\n      password: event.target.elements.password.value,\n    };\n\n    const response = await dispatch(register(newUser));\n\n    if (response.error) {\n      toast(response.payload);\n    } else {\n      navigate('/home');\n    }\n  }\n\n  return (\n    <Container>\n      <form onSubmit={handleSubmit}>\n        <Formik initialValues={{ name: '', email: '', password: '', }} validationSchema={RegisterSchema}>\n          <Content>\n            <Menu>\n              <StyledRegistrationLink href=\"register\" underline=\"none\">Registration</StyledRegistrationLink>\n              <StyledLink href=\"login\" underline=\"none\">Log In</StyledLink>\n            </Menu>\n            <Inputs>\n              <Field name=\"name\" type=\"text\" placeholder=\"Name\" />\n              <ErrorText name=\"name\" component=\"div\" />\n              <Field name=\"email\" type=\"email\" placeholder=\"Email\" />\n              <ErrorText name=\"email\" component=\"div\" />\n              <PasswordInput>\n                <Field name=\"password\" type={showPassword ? 'text' : 'password'} placeholder=\"Password\" />\n                <ErrorText name=\"password\" component=\"div\" />\n                <PasswordToggle className={`${PasswordToggle} ${PasswordIcon}`} onClick={togglePasswordVisibility}>\n                  {showPassword ? (\n                    <PasswordIcon icon={faEyeSlash} width='18px' />\n                  ) : (\n                    <Svg><use xlinkHref={`${sprite}#icon-eye`} /></Svg>\n                  )}\n                </PasswordToggle>\n              </PasswordInput>\n            </Inputs>\n            <RegisterBtn type='submit'>Register Now</RegisterBtn>\n          </Content>\n        </Formik>\n      </form>\n    </Container>\n\n  );\n}\n\nexport default RegistrationPage;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from '@mui/material';\nimport styled from '@emotion/styled';\nimport { ErrorMessage } from 'formik';\n\nexport const Container = styled.div `\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100vh;\n    width: 100%;\n    background: var(--welcomeBgColor);\n    background-repeat: no-repeat;\n    background-size: cover;\n`\nexport const Content = styled.div `\n  text-align: center;\n  background: var(--bgColorAuth);\n  border-radius: 8px;\n  padding: 40px;\n  @media screen and (max-width: 768px) {\n    padding: 24px;\n  }\n`\nexport const Menu = styled.div`\n  display: flex;\n`;\n\nexport const StyledLink = styled(Link)`\n  left: 160px;\n  top: 40px;\n  font-style: normal;\n  font-weight: var(--fontWeight500);\n  font-size: var(--fontSize18);\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: var(--lightColor);\n`;\n\nexport const StyledRegistrationLink = styled(Link)`\n  margin-right: 14px;\n  font-style: normal;\n  font-weight: var(--fontWeight500);\n  font-size: var(--fontSize18);\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: var(--inputTextColor);\n`;\n\nexport const Inputs = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 40px;\n  gap: 14px;\n\n  input {\n    width: 326px;\n    height: 49px;\n    left: 40px;\n    top: 107px;\n    color: var(--lightColor);\n    background: var(--inputBgColor);\n    opacity: 0.4;\n    border: 1px solid var(--buttonBgColor);\n    padding-left: 18px;\n    box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n    border-radius: 8px;\n    @media screen and (max-width: 768px) {\n        width: 287px;\n\n    }\n  }\n`;\nexport const PasswordInput = styled.div `\n    position: relative;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    gap: 14px;\n`\nexport const PasswordInputField = styled.input`\n  width: 326px;\n  height: 49px;\n  left: 40px;\n  top: 107px;\n  color: var(--lightColor);\n  background: var(--inputBgColor);\n  opacity: 0.4;\n  border: 1px solid var(--inputBorderFocus);\n  padding-left: 18px;\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n  border-radius: 8px;\n`;\n\nexport const PasswordToggle = styled.span`\n    position: absolute;\n    right: 18px;\n    top: 19px;\n    cursor: pointer;\n    color: var(--passwordColor);\n`;\n\nexport const PasswordIcon = styled(FontAwesomeIcon)`\n    color: var(--passwordColor);\n`;\nexport const Svg = styled.svg`\n  width: 16.5px;\n  height: 16px;\n  top: 50%;\n  right: 4px;\n`;\nexport const LoginBtn = styled.button`\n    font-style: normal;\n    font-weight: var(--fontWeight500);\n    font-size: 14px;\n    line-height: 21px;\n    text-align: center;\n    margin-top: 24px;\n    letter-spacing: -0.02em;\n    width: 100%;\n    height: 49px;\n    background: var(--buttonBgColor);\n    border-radius: 8px;\n    color: var(--buttonColor);\n    cursor: pointer;\n    @media screen and (max-width: 768px) {\n        width: 287px;\n    }\n`;\n\nexport const ErrorText = styled(ErrorMessage)`\n  font-size: 15px;\n  color: white;\n`;","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { faEyeSlash } from '@fortawesome/free-solid-svg-icons';\nimport sprite from '../../sourse/sprite.svg';\nimport { login } from 'redux/auth/authOperations';\nimport { useDispatch } from 'react-redux';\nimport { ErrorText, PasswordToggle, Menu, Inputs, Container, PasswordInput, PasswordIcon, Content, Svg, LoginBtn, StyledRegistrationLink, StyledLink } from \"./LoginForm.styled\"\nimport { setToken } from 'redux/auth/authSelectors';\nimport { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { toast } from 'react-toastify';\n\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string().min(6, 'Password must be at least 6 characters').email('Invalid email').required('Email is required'),\n  password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required'),\n});\n\nfunction LoginPage() {\n  const navigate = useNavigate()\n  const [showPassword, setShowPassword ] = useState(false);\n  const dispatch = useDispatch();\n\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const currentUser = {\n      email: event.target.elements.email.value,\n      password: event.target.elements.password.value,\n    }\n\n    const response = await dispatch(login(currentUser, setToken));\n\n    if (response.error) {\n      toast.error(response.payload);\n    } else {\n      navigate('/home');\n    }\n  }\n\n  return (\n    <Container>\n      <form onSubmit={handleSubmit}>\n      <Formik initialValues={{ email: '', password: '', }} validationSchema={LoginSchema}>\n        <Content>\n          <Menu>\n            <StyledRegistrationLink href=\"register\" underline=\"none\">Registration</StyledRegistrationLink>\n            <StyledLink href=\"login\" underline=\"none\">Log In</StyledLink>\n          </Menu>\n          <Inputs>\n            <Field name=\"email\" type=\"email\" placeholder=\"Email\" />\n            <ErrorText name=\"email\" component=\"div\" />\n            <PasswordInput>\n              <Field name=\"password\" type={showPassword ? 'text' : 'password'} placeholder=\"Password\" />\n              <ErrorText name=\"password\" component=\"div\" />\n\n                <PasswordToggle className={`${PasswordToggle} ${PasswordIcon}`} onClick={togglePasswordVisibility}>\n                  {showPassword ? (\n                    <PasswordIcon icon={faEyeSlash} width='18px' />\n                  ) : (\n                    <Svg><use xlinkHref={`${sprite}#icon-eye`} style={{ color:'#737373' }} /></Svg>\n                  )}\n                </PasswordToggle>\n              </PasswordInput>\n          </Inputs>\n          <LoginBtn>Log In Now</LoginBtn>\n        </Content>\n        </Formik>\n      </form>\n    </Container>\n  );\n}\n\nexport default LoginPage;\n","import { useParams } from 'react-router-dom';\nimport RegisterForm from '../components/RegisterForm/RegisterForm'\nimport LoginForm from '../components/LoginForm/LoginForm'\nimport { ToastContainer } from 'react-toastify';\n\nconst AuthPage = () => {\n  const { id } = useParams();\n  return (\n    <div>\n      {id === 'login' && <LoginForm />}\n      {id === 'register' && <RegisterForm /> }\n      <ToastContainer />\n    </div>\n  );\n};\nexport default AuthPage;"],"names":["Container","styled","Content","Menu","StyledLink","Link","StyledRegistrationLink","Inputs","PasswordInput","PasswordToggle","PasswordIcon","FontAwesomeIcon","Svg","RegisterBtn","ErrorText","ErrorMessage","RegisterSchema","Yup","shape","name","required","email","min","password","navigate","useNavigate","dispatch","useDispatch","useState","showPassword","setShowPassword","handleSubmit","event","preventDefault","newUser","target","elements","value","register","response","error","toast","payload","onSubmit","initialValues","validationSchema","href","underline","type","placeholder","component","className","onClick","icon","faEyeSlash","width","xlinkHref","sprite","LoginBtn","LoginSchema","currentUser","login","setToken","style","color","id","useParams","LoginForm","RegisterForm"],"sourceRoot":""}