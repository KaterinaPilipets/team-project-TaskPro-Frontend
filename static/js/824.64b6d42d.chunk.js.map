{"version":3,"file":"static/js/824.64b6d42d.chunk.js","mappings":"iRAGaA,EAAkBC,EAAAA,EAAAA,IAAH,uGAOfC,EAAkBD,EAAAA,EAAAA,IAAH,iIAQfE,EAAgBF,EAAAA,EAAAA,IAAH,8GAObG,EAAaH,EAAAA,EAAAA,EAAH,ydAMWI,EAAAA,EAAAA,EAMAA,EAAAA,EAAAA,EAMAA,EAAAA,EAAAA,GAMrBC,EAAaL,EAAAA,EAAAA,EAAH,4D,kBCnCVM,EAAmB,WAC9B,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,KAEhCC,EAAAA,EAAAA,YAAU,WACJH,GACFF,EAAS,GAAD,OAAIE,GAEf,GAAE,CAACA,EAAaF,IAMjB,OACGE,IACC,UAACZ,EAAD,YACE,SAACE,EAAD,WACE,SAACc,EAAA,EAAD,OAEF,SAACb,EAAD,WACE,UAACC,EAAD,WAAY,sDAEV,SAACE,EAAD,CAAYW,KAAK,IAAIC,QAblB,WACXV,GAASW,EAAAA,EAAAA,MACV,EAWS,SAAoC,sBAEvB,kMASxB,EChBD,EA1BiB,WAGf,IAAMC,GAAQP,EAAAA,EAAAA,IAAYQ,EAAAA,IAe1B,OARAN,EAAAA,EAAAA,YAAU,WACJK,EACFE,SAASC,KAAKC,aAAa,aAAcJ,GAEzCE,SAASC,KAAKC,aAAa,aAAc,OAE5C,GAAE,CAACJ,KAGF,4BAEE,SAACb,EAAD,KACA,SAAC,KAAD,MAGL,C","sources":["components/Board/DefaultDashboard/DefaultDashboard.styled.js","components/Board/DefaultDashboard/DefaultDashboard.jsx","pages/HomePage.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { breakpoints } from 'constants';\n\nexport const StyledContainer = styled.div`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FilterContainer = styled.div`\n  width: 100%;\n  height: 24px;\n  display: flex;\n  justify-content: right;\n  padding: 14px 24px 0 0;\n`;\n\nexport const TextContainer = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const StyledText = styled.p`\n  text-align: center;\n  display: block;\n  color: var(--defaultText);\n  padding-top: 280px;\n\n  @media screen and (min-width: ${breakpoints.S}) {\n    padding-top: 250px;\n    max-width: 355px;\n    font-size: var(--fontSize12);\n  }\n\n  @media screen and (min-width: ${breakpoints.M}) {\n    padding-top: 476px;\n    max-width: 580px;\n    font-size: var(--fontSize14);\n  }\n\n  @media screen and (min-width: ${breakpoints.L}) {\n    padding-top: 350px;\n    max-width: 505px;\n  }\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--defaultAccentText);\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { getActiveBoard } from 'redux/auth/authSelectors';\nimport { openAddBoardModal } from 'redux/sidebar/sidebarSlice';\nimport {\n  StyledContainer,\n  StyledLink,\n  StyledText,\n  TextContainer,\n  FilterContainer,\n} from './DefaultDashboard.styled';\nimport { FIlterButton } from '../FIlterButton/FIlterButton';\n\nexport const DefaultDashboard = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const activeBoard = useSelector(getActiveBoard);\n\n  useEffect(() => {\n    if (activeBoard) {\n      navigate(`${activeBoard}`);\n    }\n  }, [activeBoard, navigate]);\n\n  const open = () => {\n    dispatch(openAddBoardModal());\n  };\n\n  return (\n    !activeBoard && (\n      <StyledContainer>\n        <FilterContainer>\n          <FIlterButton />\n        </FilterContainer>\n        <TextContainer>\n          <StyledText>\n            Before starting your project, it is essential &nbsp;\n            <StyledLink href=\"#\" onClick={open}>\n              to create a board\n            </StyledLink>\n            &nbsp; to visualize and track all the necessary tasks and\n            milestones. This board serves as a powerful tool to organize the\n            workflow and ensure effective collaboration among team members.\n          </StyledText>\n        </TextContainer>\n      </StyledContainer>\n    )\n  );\n};\n","// import { Board } from 'components/Board/Board/Board';\nimport { DefaultDashboard } from 'components/Board/DefaultDashboard/DefaultDashboard';\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Outlet } from 'react-router-dom';\nimport { getTheme } from 'redux/auth/authSelectors';\n\nconst HomePage = () => {\n  // const boards = useSelector(state => state.boardsList.items);\n  // const activeBoard = useSelector(getActiveBoard);\n  const theme = useSelector(getTheme);\n\n  // let isShow = false;\n  // if (boards.length === 0) {\n  //   isShow = true;\n  // }\n\n  useEffect(() => {\n    if (theme) {\n      document.body.setAttribute('data-theme', theme);\n    } else {\n      document.body.setAttribute('data-theme', 'dark');\n    }\n  }, [theme]);\n\n  return (\n    <div>\n      {/* {isShow && <DefaultDashboard />}  эта траница показывается пока не выбрана/создана доска*/}\n      <DefaultDashboard />\n      <Outlet />\n    </div>\n  );\n};\nexport default HomePage;\n"],"names":["StyledContainer","styled","FilterContainer","TextContainer","StyledText","breakpoints","StyledLink","DefaultDashboard","dispatch","useDispatch","navigate","useNavigate","activeBoard","useSelector","getActiveBoard","useEffect","FIlterButton","href","onClick","openAddBoardModal","theme","getTheme","document","body","setAttribute"],"sourceRoot":""}