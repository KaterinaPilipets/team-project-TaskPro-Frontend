{"version":3,"file":"static/js/932.507c2535.chunk.js","mappings":"yPAEaA,EAAeC,EAAAA,EAAAA,OAAH,wP,yCCEZC,EAAS,SAAC,GAKhB,IAAD,IAJJC,KAAAA,OAII,MAJG,SAIH,EAHJC,EAGI,EAHJA,QACAC,EAEI,EAFJA,SACGC,ECPU,SAAkCC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,CAAC,EAC5B,IACIE,EAAKC,EADLC,GAAS,EAAAC,EAAA,GAA6BL,EAAQC,GAElD,GAAIK,OAAOC,sBAAuB,CAChC,IAAIC,EAAmBF,OAAOC,sBAAsBP,GACpD,IAAKG,EAAI,EAAGA,EAAIK,EAAiBC,OAAQN,IACvCD,EAAMM,EAAiBL,GACnBF,EAASS,QAAQR,IAAQ,GACxBI,OAAOK,UAAUC,qBAAqBC,KAAKb,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,GAEzB,CACA,OAAOE,CACT,CDNM,MACJ,OACE,SAACX,GAAD,gBAAcG,KAAMA,EAAMC,QAASA,GAAaE,GAAhD,aACGD,IAGN,EEbYgB,EAAWpB,EAAAA,EAAAA,GAAH,yMASRqB,EAAQrB,EAAAA,EAAAA,EAAH,mJAMLsB,EAAWtB,EAAAA,EAAAA,EAAH,wFAIRuB,EAAUvB,EAAAA,EAAAA,EAAH,wFAIPwB,EAAaxB,EAAAA,EAAAA,EAAH,2HAMVyB,EAAOzB,EAAAA,EAAAA,KAAH,qIAOJ0B,EAAO1B,EAAAA,EAAAA,IAAH,4GC7BJ2B,EAAO,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACbC,EAA0CD,EAA1CC,KAAMC,EAAoCF,EAApCE,YAAaC,EAAuBH,EAAvBG,SAAUC,EAAaJ,EAAbI,SAErC,OACE,UAACZ,EAAD,YACE,SAACC,EAAD,UAAQQ,KACR,SAACL,EAAD,UAAaM,KACb,SAACL,EAAD,KACA,UAACC,EAAD,YACE,4BACE,SAACJ,EAAD,wBACA,SAACC,EAAD,UAAUQ,QAEZ,4BACE,SAACT,EAAD,wBACA,SAACC,EAAD,UAAUS,YAKnB,EC5BYC,EAAOjC,EAAAA,EAAAA,GAAH,+HAQJkC,EAAelC,EAAAA,EAAAA,IAAH,yOAcZmC,EAASnC,EAAAA,EAAAA,IAAH,oGCpBNoC,EAAa,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,YAEvC,OACE,UAACH,EAAD,YACE,SAACD,EAAD,WACE,uBAAII,OAGN,SAACL,EAAD,UACGI,EAAWE,KAAI,SAAAX,GAEd,OADAY,QAAQC,IAAIb,IACL,SAACD,EAAD,CAAoBC,KAAMA,GAAfA,EAAKc,GACxB,OAGH,SAACzC,EAAD,iCAIL,ECjBKoC,EAAa,CACjB,CACEK,GAAI,IAEJb,KAAM,yBACNC,YAAY,0OACZC,SAAU,MACVC,SAAU,kBAEZ,CACEU,GAAI,IAEJb,KAAM,yBACNC,YAAY,0OACZC,SAAU,OACVC,SAAU,mBAad,EATiB,WAEf,OADAW,SAASC,KAAKC,aAAa,aAAc,SAEvC,4BACE,mCACA,SAACT,EAAD,CAAYC,WAAYA,EAAYC,YAAY,kBAGrD,C","sources":["components/Button/Button.styled.js","components/Button/Button.jsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","components/Bord/Task/Task.styled.js","components/Bord/Task/Task.js","components/Bord/ColumnTask/ColumnTask.Styled.js","components/Bord/ColumnTask/ColumnTask.js","pages/HomePage.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const StyledButton = styled.button`\nwidth: 100%;\nfont-family: inherit;\nfont-size: 14px;\ntext-align: center;\ntext-decoration: none;\ncolor: inherit;\nbackground-color: transparent;\nborder: none;\nborder-radius: 8px;\nborder-radius: 8px;\ncursor: pointer;\n`;\n","// import PropTypes from \"prop-types\";\n\nimport { StyledButton } from \"./Button.styled\";\n\nexport const Button = ({\n  type = \"submit\",\n  onClick,\n  children,\n  ...allyProps\n}) => {\n  return (\n    <StyledButton type={type} onClick={onClick} {...allyProps}>\n      {children}\n    </StyledButton>\n  );\n};\n\n// Button.propTypes = {\n//   onClick: PropTypes.func,\n//   children: PropTypes.node,\n//   \"aria-label\": PropTypes.string.isRequired,\n// };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","import styled from '@emotion/styled';\n\nexport const ListItem = styled.li`\n  border-left: 4px solid teal;\n  border-radius: 8px;\n  width: 100%;\n  height: 154px;\n  padding: 14px 24px;\n  background-color: var(--bgColor);\n  color: var(--textColor);\n`;\nexport const Title = styled.p`\n  font-size: var(--fontSize14);\n  font-weight: var(--fontWeight500);\n  margin-bottom: 8px;\n  color: var(--titleColor);\n`;\nexport const SubTitle = styled.p`\n  color: var(--subTitleColor);\n  font-size: var(--fontSize8);\n`;\nexport const SubText = styled.p`\n  color: var(--subTextColor);\n  font-size: var(--fontSize10);\n`;\nexport const TextHidden = styled.p`\n  font-size: var(--fontSize12);\n  height: 38px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\nexport const Span = styled.span`\n  display: block;\n  height: 1px;\n  width: 100%;\n  background-color: var(--lineColor);\n  margin: 14px 0;\n`;\nexport const Wrap = styled.div`\n  display: flex;\n  justify-contact: center;\n  aling-items: center;\n  gap: 14px;\n`;\n","import {\n  ListItem,\n  Span,\n  TextHidden,\n  Title,\n  SubTitle,\n  SubText,\n  Wrap,\n} from './Task.styled';\nexport const Task = ({ task }) => {\n  const { name, discription, priority, deadline } = task;\n\n  return (\n    <ListItem>\n      <Title>{name}</Title>\n      <TextHidden>{discription}</TextHidden>\n      <Span />\n      <Wrap>\n        <div>\n          <SubTitle>Priority</SubTitle>\n          <SubText>{priority}</SubText>\n        </div>\n        <div>\n          <SubTitle>Deadline</SubTitle>\n          <SubText>{deadline}</SubText>\n        </div>\n      </Wrap>\n    </ListItem>\n  );\n};\n","import styled from '@emotion/styled';\nexport const List = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n  padding: 0;\n  gap: 8px;\n`;\nexport const HeaderColumn = styled.div`\n  border-radius: 8px;\n  width: 100%;\n  hight: 56px;\n  padding: 14px 24px;\n  background-color: var(--bgColor);\n  color: var(--titleColor);\n  font-weight: var(--fontWeight500);\n  // margin-bottom: 14px;\n`;\n// export const Wrap = styled.div`\n//   dysplay: block;\n//   margin-bottom: 36px;\n// `;\nexport const Column = styled.div`\n  width: 334px;\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n`;\n","import { Button } from 'components/Button';\nimport { Task } from '../Task/Task';\nimport { Column, HeaderColumn, List } from './ColumnTask.Styled';\nexport const ColumnTask = ({ tasksArray, titleColumn }) => {\n  //   console.log(tasksArray);\n  return (\n    <Column>\n      <HeaderColumn>\n        <p>{titleColumn}</p>\n      </HeaderColumn>\n\n      <List>\n        {tasksArray.map(task => {\n          console.log(task);\n          return <Task key={task.id} task={task} />;\n        })}\n      </List>\n      {/* <Wrap> */}\n      <Button>Add another card</Button>\n      {/* </Wrap> */}\n    </Column>\n  );\n};\n\n// function ContactList() {\n//   const filteredContacts = useSelector(selectFilteredContacts);\n//   return (\n//     <List>\n//       {filteredContacts.map(({ id, name, number }) => (\n//         <Contact key={id} id={id} name={name} number={number} />\n//       ))}\n//     </List>\n//   );\n// }\n","// import { SharedLayout } from 'components/SharedLayout/SharedLayout.js';\n\nimport { ColumnTask } from 'components/Bord/ColumnTask/ColumnTask';\n\n// import { Task } from 'components/Bord/Task/Task';\nconst tasksArray = [\n  {\n    id: '1',\n    // titleColumn: '1col',or id\n    name: 'The Watch Spot Design1',\n    discription: `Create a visually stunning and eye-catching watch dial design that embodies our brand's essence of sleek aesthetics and modern elegance. Your design should be unique, innovative, and reflective of the latest trends in watch design.`,\n    priority: 'Low',\n    deadline: '12 / 05 / 2023',\n  },\n  {\n    id: '2',\n    // titleColumn: '2col',or id\n    name: 'The Watch Spot Design2',\n    discription: `Create a visually stunning and eye-catching watch dial design that embodies our brand's essence of sleek aesthetics and modern elegance. Your design should be unique, innovative, and reflective of the latest trends in watch design.`,\n    priority: 'High',\n    deadline: '12 / 05 / 2023',\n  },\n];\n\nconst HomePage = () => {\n  document.body.setAttribute('data-theme', 'dark');\n  return (\n    <div>\n      <p>board </p>\n      <ColumnTask tasksArray={tasksArray} titleColumn=\"titleColumn\" />\n    </div>\n  );\n};\nexport default HomePage;\n"],"names":["StyledButton","styled","Button","type","onClick","children","allyProps","source","excluded","key","i","target","objectWithoutPropertiesLoose","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","ListItem","Title","SubTitle","SubText","TextHidden","Span","Wrap","Task","task","name","discription","priority","deadline","List","HeaderColumn","Column","ColumnTask","tasksArray","titleColumn","map","console","log","id","document","body","setAttribute"],"sourceRoot":""}